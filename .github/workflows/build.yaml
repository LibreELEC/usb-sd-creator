name: Build
on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            platform: linux
          - os: macos-latest
            platform: macos
            preset: release-macos
            artifact: "*.dmg"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        run: |
          ci/${{ matrix.platform }}/setup.sh
        env:
          MACOS_ASC_API_KEY: ${{ secrets.MACOS_ASC_API_KEY }}
          MACOS_CODE_SIGN_KEY_BASE64: ${{ secrets.MACOS_CODE_SIGN_KEY_BASE64 }}
          MACOS_KEYCHAIN_PASSWORD: ${{ secrets.MACOS_KEYCHAIN_PASSWORD }}
      - name: Configure
        run: |
          cmake --preset ${{ matrix.preset || 'release' }}
      - name: Build
        run: |
          cmake --build --preset release
      - name: Pack
        if: ${{ matrix.artifact }}
        run: |
          cpack --preset release
        env:
          ASC_API_KEY_ID: ${{ secrets.MACOS_ASC_API_KEY_ID }}
          ASC_API_KEY_ISSUER: ${{ secrets.MACOS_ASC_API_KEY_ISSUER }}
          ASC_TEAM_ID: ${{ secrets.MACOS_ASC_TEAM_ID }}
      - name: Artifact
        if: ${{ matrix.artifact }}
        uses: actions/upload-artifact@v4
        with:
          path: build/${{ matrix.artifact }}
          name: ${{ matrix.platform }}

  windows:
    runs-on: windows-latest
    name: CMake build on Windows
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-make
            mingw-w64-x86_64-qt6-base
            mingw-w64-x86_64-qt6-tools
      - name: Put MSYS2_MinGW64 on PATH
        run: echo "${{ runner.temp }}/msys64/mingw64/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - uses: actions/checkout@v4
        name: Checkout source code
      - name: CMake configure
        run: cmake -B build -G Ninja
      - name: CMake build
        run: cmake --build build
