name: Build
on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            platform: linux
          - os: macos-latest
            platform: macos
            preset: release-macos
            cpack: true
          - os: windows-latest
            platform: windows-msvc
            preset: release-msvc
            cpack: true
            useQtAction: true
          - os: windows-latest
            platform: windows-mingw
            preset: release-ninja
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        shell: bash
        run: |
          setupScript='ci/${{ matrix.platform }}/setup.sh'
          [ ! -f "$setupScript" ] || "$setupScript"
        env:
          MACOS_ASC_API_KEY: ${{ secrets.MACOS_ASC_API_KEY }}
          MACOS_CODE_SIGN_KEY_BASE64: ${{ secrets.MACOS_CODE_SIGN_KEY_BASE64 }}
          MACOS_KEYCHAIN_PASSWORD: ${{ secrets.MACOS_KEYCHAIN_PASSWORD }}

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        if: ${{ matrix.useQtAction }}
        with:
          version: "6.6.2"
          arch: "win64_msvc2019_64"
          archives: "qtbase qttools opengl32sw d3dcompiler_47"
          extra: "--external 7z"
          cache: true
          setup-python: false
      - name: Prepare MSVC environment
        uses: ilammy/msvc-dev-cmd@v1
        if: ${{ matrix.platform == 'windows-msvc' }}
        with:
          arch: x64
          toolset: 14.29

      - name: Setup msys2
        uses: msys2/setup-msys2@v2
        if: ${{ matrix.platform == 'windows-mingw' }}
        with:
          update: true
          install: >-
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-qt6-base
            mingw-w64-x86_64-qt6-tools
      - name: Put MSYS2_MinGW64 on PATH
        if: ${{ matrix.platform == 'windows-mingw' }}
        run: |
          echo "${{ runner.temp }}/msys64/mingw64/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Configure
        run: |
          cmake --preset ${{ matrix.preset || 'release' }}
      - name: Build
        run: |
          cmake --build --preset release

      - name: Pack
        if: ${{ matrix.cpack }}
        run: |
          cpack --preset release
        env:
          ASC_API_KEY_ID: ${{ secrets.MACOS_ASC_API_KEY_ID }}
          ASC_API_KEY_ISSUER: ${{ secrets.MACOS_ASC_API_KEY_ISSUER }}
          ASC_TEAM_ID: ${{ secrets.MACOS_ASC_TEAM_ID }}
      - name: Pack zip
        if: ${{ matrix.platform == 'windows-msvc' }}
        run: |
          cpack --preset release -G ZIP
      - name: Artifact
        uses: actions/upload-artifact@v4
        with:
          path: build/cpack/LibreELEC.USB-SD.Creator.*
          name: ${{ matrix.platform }}
          compression-level: 0
